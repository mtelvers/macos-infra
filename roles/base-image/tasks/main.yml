---

- set_fact:
    short_version: "{{ version.split('.')[:2] | join('.') }}"

- name: Download the source from GitHub
  git:
    repo: https://github.com/ocurrent/macos-infra
    dest: "{{ ansible_env.HOME }}/macos-infra"
    force: yes

- name: chmod +x
  file:
    dest: "{{ ansible_env.HOME }}/macos-infra/scripts/{{ item }}"
    mode: a+x
  loop:
    - new-user.sh
    - macos-homebrew-ocaml.sh
    - cleanup.sh

- name: Create a scoreboard directory if it does not exist
  file:
    path: "{{ ansible_env.HOME }}/scoreboard"
    state: directory
    mode: '0755'

- name: Check for user {{ user_name }}
  shell: dscl . read /Users/{{ user_name }}
  register: user_check
  failed_when: user_check.rc == -1

- name: Delete user {{ user_name }} if it exists
  shell: dscl . -delete /Users/{{ user_name }}
  when: user_check.rc == 0
  become: yes

- name: Remove any /Users/{{ user_name }}
  become: yes
  file:
    state: absent
    path: /Users/{{ user_name }}

- name: Create user {{ user_name }}
  shell: "{{ ansible_env.HOME }}/macos-infra/scripts/new-user.sh 1000 {{ user_name }}"

- name: Create sudo file for {{ user_name }}
  copy:
    dest: "/private/etc/sudoers.d/{{ user_name }}"
    content: |
      {{ user_name }} ALL=(ALL) NOPASSWD: ALL
  become: yes

- name: Create a symbolic link
  file:
    src: /Users/{{ user_name }}
    dest: "{{ ansible_env.HOME }}/scoreboard/1000"
    state: link

- name: Unmount {{ homebrew_prefix }} if it is mounted
  become: yes
  mount:
    path: "{{ homebrew_prefix }}"
    state: unmounted

- name: Create /Users/{{ user_name }}/local and homebrew subfolders
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ user_name }}"
    group: admin
  become: yes
  with_items:
    - "/Users/{{ user_name }}/local"
    - "/Users/{{ user_name }}/local/bin"
    - "/Users/{{ user_name }}/local/etc"
    - "/Users/{{ user_name }}/local/include"
    - "/Users/{{ user_name }}/local/lib"
    - "/Users/{{ user_name }}/local/sbin"
    - "/Users/{{ user_name }}/local/share"
    - "/Users/{{ user_name }}/local/var"
    - "/Users/{{ user_name }}/local/opt"
    - "/Users/{{ user_name }}/local/share/zsh"
    - "/Users/{{ user_name }}/local/share/zsh/site-functions"
    - "/Users/{{ user_name }}/local/var/homebrew"
    - "/Users/{{ user_name }}/local/var/homebrew/linked"
    - "/Users/{{ user_name }}/local/Cellar"
    - "/Users/{{ user_name }}/local/Caskroom"
    - "/Users/{{ user_name }}/local/Frameworks"

- name: mount {{ homebrew_prefix }}
  become: yes
  shell: obuilderfs {{ ansible_env.HOME }}/scoreboard {{ homebrew_prefix }} -o allow_other

- name: Copy file setup script
  become: yes
  copy:
    #src: "{{ ansible_env.HOME }}/macos-infra/scripts/macos-homebrew-ocaml.sh"
    #remote_src: yes
    src: "scripts/macos-homebrew-ocaml.sh"
    dest: /Users/{{ user_name }}/macos-homebrew-ocaml.sh
    mode: u+rwx,g+rx,o+rx

- name: Test
  become: yes
  become_user: "{{ user_name }}"
  shell: ls -l /opt/homebrew
  args:
    chdir: "/Users/{{ user_name }}"

- name: Run macos-homebrew-ocaml.sh script as user {{ user_name }} for {{ short_version }}
  become: yes
  become_user: "{{ user_name }}"
  shell: ./macos-homebrew-ocaml.sh {{ version }}
  args:
    chdir: "/Users/{{ user_name }}"
    creates: "/Users/{{ user_name }}/opam-repository"

- name: Unmount {{ homebrew_prefix }} if it is mounted
  become: yes
  mount:
    path: "{{ homebrew_prefix }}"
    state: unmounted

- name: Delete user {{ user_name }}
  become: yes
  shell: dscl . -delete /Users/{{ user_name }}

- name: Remove old /Users/macos-homebrew-ocaml-{{ short_version }}
  become: yes
  file:
    state: absent
    path: /Users/macos-homebrew-ocaml-{{ short_version }}

- name: Move /Users/{{ user_name }} to /Users/macos-homebrew-ocaml-{{ short_version }}
  become: yes
  shell: "mv /Users/{{ user_name }} /Users/macos-homebrew-ocaml-{{ short_version }}"
  args:
    removes: "/Users/{{ user_name }}"
    creates: "/Users/macos-homebrew-ocaml-{{ short_version }}"

- name: Remove /Volumes/rsync
  become: yes
  shell: rm -rf /Volumes/rsync
  args:
    removes: /Volumes/rsync

