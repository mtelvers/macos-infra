---

- hosts: all
  tasks:
  - name: Check architecture intel
    set_fact: homebrew_prefix="/usr/local"
    when: ansible_architecture == "x86_64"

  - name: Check architecture arm
    set_fact: homebrew_prefix="/opt/homebrew"
    when: ansible_architecture == "arm64"

  - debug:
      var: homebrew_prefix

- hosts: all
  tasks:

  - name: Pause the worker
    shell: ci3-admin pause --wait macos-{{ ansible_architecture }} {{ inventory_hostname_short }}
    delegate_to: 127.0.0.1

  - name: Stop ocluster via launchctl
    shell: launchctl unload /Library/LaunchDaemons/com.tarides.ocluster.worker.plist
    become: yes
    register: launchctl_check
    failed_when: not ( launchctl_check.rc == 134 or launchctl_check.rc == 0 )

  - name: Destroy ZFS pool
    shell: "{{ ansible_env.HOME }}/zfs/bin/zpool destroy -f obuilder"
    become: yes

  - name: Create new pool
    shell: "{{ ansible_env.HOME }}/zfs/bin/zpool create -f obuilder /dev/disk0s3"
    become: yes

  - name: Set defaults
    shell: "{{ ansible_env.HOME }}/zfs/bin/zfs {{ item }}"
    become: yes
    with_items:
      - set atime=off obuilder
      - set checksum=off obuilder
      - set compression=off obuilder

- hosts: all
  name: Install Roles
  roles:
    - macos
    - { role: base-image, version: "4.14.1", user_name: mac1000, zfs_pool: "obuilder", default: false }
    - { role: base-image, version: "5.0.0", user_name: mac1000, zfs_pool: "obuilder", default: false }
    - { role: base-image, version: "5.1.0", user_name: mac1000, zfs_pool: "obuilder", default: true }
    - { role: base-image, version: "5.2.0+trunk", user_name: mac1000, zfs_pool: "obuilder", default: false }
    - { role: busybox, user_name: mac1000, zfs_pool: "obuilder" }
    - ocluster
  environment:
    PATH: '{{ ansible_env.HOME }}/zfs/bin:{{ homebrew_prefix }}/bin:{{ ansible_env.PATH }}'

- hosts: all
  tasks:

  - name: Unpause the worker
    shell: ci3-admin unpause macos-{{ ansible_architecture }} {{ inventory_hostname_short }}
    delegate_to: 127.0.0.1

